<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oa.mapper.ClaimVoucherMapper">
  <resultMap id="BaseResultMap" type="com.oa.entity.ClaimVoucher">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="cause" jdbcType="VARCHAR" property="cause" />
    <result column="create_sn" jdbcType="CHAR" property="createSn" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="next_deal_sn" jdbcType="CHAR" property="nextDealSn" />
    <result column="total_amount" jdbcType="DOUBLE" property="totalAmount" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, cause, create_sn, create_time, next_deal_sn, total_amount, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from claim_voucher
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from claim_voucher
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.oa.entity.ClaimVoucher">
    insert into claim_voucher (id, cause, create_sn, 
      create_time, next_deal_sn, total_amount, 
      status)
    values (#{id,jdbcType=INTEGER}, #{cause,jdbcType=VARCHAR}, #{createSn,jdbcType=CHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{nextDealSn,jdbcType=CHAR}, #{totalAmount,jdbcType=DOUBLE}, 
      #{status,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.oa.entity.ClaimVoucher">
    insert into claim_voucher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="cause != null">
        cause,
      </if>
      <if test="createSn != null">
        create_sn,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="nextDealSn != null">
        next_deal_sn,
      </if>
      <if test="totalAmount != null">
        total_amount,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cause != null">
        #{cause,jdbcType=VARCHAR},
      </if>
      <if test="createSn != null">
        #{createSn,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nextDealSn != null">
        #{nextDealSn,jdbcType=CHAR},
      </if>
      <if test="totalAmount != null">
        #{totalAmount,jdbcType=DOUBLE},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.oa.entity.ClaimVoucher">
    update claim_voucher
    <set>
      <if test="cause != null">
        cause = #{cause,jdbcType=VARCHAR},
      </if>
      <if test="createSn != null">
        create_sn = #{createSn,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nextDealSn != null">
        next_deal_sn = #{nextDealSn,jdbcType=CHAR},
      </if>
      <if test="totalAmount != null">
        total_amount = #{totalAmount,jdbcType=DOUBLE},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.oa.entity.ClaimVoucher">
    update claim_voucher
    set cause = #{cause,jdbcType=VARCHAR},
      create_sn = #{createSn,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      next_deal_sn = #{nextDealSn,jdbcType=CHAR},
      total_amount = #{totalAmount,jdbcType=DOUBLE},
      status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
	<resultMap id="BaseResultMap" type="com.oa.entity.ClaimVoucher">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="cause" jdbcType="VARCHAR" property="cause" />
		<result column="create_sn" jdbcType="CHAR" property="createSn" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="next_deal_sn" jdbcType="CHAR" property="nextDealSn" />
		<result column="total_amount" jdbcType="DOUBLE" property="totalAmount" />
		<result column="status" jdbcType="VARCHAR" property="status" />
		<association column="create_sn" javaType="Employee" property="creater">
			<result column="cname" javaType="String" property="name" />
			<result column="cpost" javaType="String" property="post" />
		</association>
		<association column="next_deal_sn" javaType="Employee" property="dealer">
			<result column="dname" javaType="String" property="name" />
			<result column="dpost" javaType="String" property="post" />
		</association>
	</resultMap>
	<sql id="Base_Column_List">
		id, cause, create_sn, create_time, next_deal_sn,
		total_amount, status
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select cv.*,c.name cname,c.post cpost,d.name dname,d.post
		dpost
		from claim_voucher cv
		left join employee c on c.sn=cv.create_sn
		left join
		employee d on d.sn=cv.next_deal_sn
		where cv.id=#{id}
	</select>

	<select id="selectByCreateSn" parameterType="java.lang.String" resultMap="BaseResultMap">
		select cv.*,c.name cname,c.post cpost,d.name dname,d.post
		dpost
		from claim_voucher cv
		left join employee c on c.sn=cv.create_sn
		left join
		employee d on d.sn=cv.next_deal_sn
		where cv.create_sn=#{csn} order by cv.create_time desc
	</select>

	<select id="selectByNextDealSn" parameterType="java.lang.String" resultMap="BaseResultMap">
		select cv.*,c.name cname,c.post cpost,d.name dname,d.post
		dpost
		from claim_voucher cv
		left join employee c on c.sn=cv.create_sn
		left join
		employee d on d.sn=cv.next_deal_sn
		where cv.next_deal_sn=#{ndsn} order by cv.create_time desc
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		claim_voucher
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" keyProperty="id" parameterType="com.oa.entity.ClaimVoucher" useGeneratedKeys="true">
		insert into claim_voucher (id, cause, create_sn,
		create_time, next_deal_sn, total_amount,
		status)
		values
		(#{id,jdbcType=INTEGER}, #{cause,jdbcType=VARCHAR},
		#{createSn,jdbcType=CHAR},
		#{createTime,jdbcType=TIMESTAMP},
		#{nextDealSn,jdbcType=CHAR}, #{totalAmount,jdbcType=DOUBLE},
		#{status,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.oa.entity.ClaimVoucher">
		insert into claim_voucher
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="cause != null">
				cause,
			</if>
			<if test="createSn != null">
				create_sn,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="nextDealSn != null">
				next_deal_sn,
			</if>
			<if test="totalAmount != null">
				total_amount,
			</if>
			<if test="status != null">
				status,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="cause != null">
				#{cause,jdbcType=VARCHAR},
			</if>
			<if test="createSn != null">
				#{createSn,jdbcType=CHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="nextDealSn != null">
				#{nextDealSn,jdbcType=CHAR},
			</if>
			<if test="totalAmount != null">
				#{totalAmount,jdbcType=DOUBLE},
			</if>
			<if test="status != null">
				#{status,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.oa.entity.ClaimVoucher">
		update claim_voucher
		<set>
			<if test="cause != null">
				cause = #{cause,jdbcType=VARCHAR},
			</if>
			<if test="createSn != null">
				create_sn = #{createSn,jdbcType=CHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="nextDealSn != null">
				next_deal_sn = #{nextDealSn,jdbcType=CHAR},
			</if>
			<if test="totalAmount != null">
				total_amount = #{totalAmount,jdbcType=DOUBLE},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.oa.entity.ClaimVoucher">
		update
		claim_voucher
		set cause = #{cause,jdbcType=VARCHAR},
		create_sn =
		#{createSn,jdbcType=CHAR},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		next_deal_sn =
		#{nextDealSn,jdbcType=CHAR},
		total_amount =
		#{totalAmount,jdbcType=DOUBLE},
		status = #{status,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>